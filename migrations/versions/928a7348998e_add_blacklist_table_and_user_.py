"""Add Blacklist table and User.blacklisted_items relationship

Revision ID: 928a7348998e
Revises: 0543cea91b5b
Create Date: 2025-05-08 16:39:00.492754

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '928a7348998e'
down_revision = '0543cea91b5b'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('spotify_id', sa.String(length=255), nullable=False),
    sa.Column('item_type', sa.String(length=50), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'spotify_id', 'item_type', name='_user_spotify_item_blacklist_uc')
    )
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.alter_column('themes',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)
        batch_op.alter_column('problematic_content',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('bible_verses', schema=None) as batch_op:
        batch_op.alter_column('theme_keywords',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True)

    with op.batch_alter_table('playlist_songs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('track_position', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('added_at_spotify', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('added_by_spotify_user_id', sa.String(length=255), nullable=True))

    with op.batch_alter_table('playlists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('spotify_snapshot_id', sa.String(length=255), nullable=True))

    with op.batch_alter_table('whitelist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('spotify_id', sa.String(length=255), nullable=False))
        batch_op.add_column(sa.Column('item_type', sa.String(length=50), nullable=False))
        batch_op.drop_constraint('_user_artist_uc', type_='unique')
        batch_op.drop_constraint('_user_song_artist_uc', type_='unique')
        batch_op.create_unique_constraint('_user_spotify_item_uc', ['user_id', 'spotify_id', 'item_type'])
        batch_op.drop_column('artist_name')
        batch_op.drop_column('song_title')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('whitelist', schema=None) as batch_op:
        batch_op.add_column(sa.Column('song_title', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('artist_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_constraint('_user_spotify_item_uc', type_='unique')
        batch_op.create_unique_constraint('_user_song_artist_uc', ['user_id', 'song_title', 'artist_name'])
        batch_op.create_unique_constraint('_user_artist_uc', ['user_id', 'artist_name'])
        batch_op.drop_column('item_type')
        batch_op.drop_column('spotify_id')

    with op.batch_alter_table('playlists', schema=None) as batch_op:
        batch_op.drop_column('spotify_snapshot_id')

    with op.batch_alter_table('playlist_songs', schema=None) as batch_op:
        batch_op.drop_column('added_by_spotify_user_id')
        batch_op.drop_column('added_at_spotify')
        batch_op.drop_column('track_position')

    with op.batch_alter_table('bible_verses', schema=None) as batch_op:
        batch_op.alter_column('theme_keywords',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.alter_column('problematic_content',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
        batch_op.alter_column('themes',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)

    op.drop_table('blacklist')
    # ### end Alembic commands ###
