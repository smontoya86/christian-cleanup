"""Add status and concerns to AnalysisResult

Revision ID: ed274454e605
Revises: 9f283ca5ae8c
Create Date: 2025-05-18 10:54:04.070446

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ed274454e605'
down_revision = '9f283ca5ae8c'
branch_labels = None
depends_on = None


def upgrade():
    # Add new columns as nullable first
    op.add_column('analysis_results', sa.Column('status', sa.String(length=20), nullable=True))
    op.add_column('analysis_results', sa.Column('concerns', sa.JSON(), nullable=True))
    op.add_column('analysis_results', sa.Column('score', sa.Float(), nullable=True))
    op.add_column('analysis_results', sa.Column('error_message', sa.Text(), nullable=True))
    op.add_column('analysis_results', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.add_column('analysis_results', sa.Column('updated_at', sa.DateTime(), nullable=True))

    # Set default values for existing rows
    op.execute("""
        UPDATE analysis_results
        SET
            status = 'completed',
            created_at = COALESCE(analyzed_at, NOW()),
            updated_at = COALESCE(analyzed_at, NOW())
        WHERE status IS NULL
    """)

    # Now alter the column to be NOT NULL
    op.alter_column('analysis_results', 'status', existing_type=sa.String(length=20), nullable=False)

    # Create indexes (only if they don't exist already)
    op.create_index('idx_analysis_concern_level', 'analysis_results', ['concern_level'], unique=False, if_not_exists=True)
    op.create_index('idx_analysis_song_id', 'analysis_results', ['song_id'], unique=False, if_not_exists=True)
    op.create_index('idx_analysis_status', 'analysis_results', ['status'], unique=False, if_not_exists=True)
    # Add check constraint for allowed statuses (in sync with app constants)
    op.create_check_constraint('ck_analysis_status_allowed', 'analysis_results', "status IN ('pending','in_progress','completed','failed')")

    # Drop the old column
    op.drop_column('analysis_results', 'raw_score')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analysis_results', schema=None) as batch_op:
        batch_op.add_column(sa.Column('raw_score', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_index('idx_analysis_status')
        batch_op.drop_index('idx_analysis_song_id')
        batch_op.drop_index('idx_analysis_concern_level')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('error_message')
        batch_op.drop_column('score')
        batch_op.drop_column('concerns')
        batch_op.drop_column('status')

    # ### end Alembic commands ###
