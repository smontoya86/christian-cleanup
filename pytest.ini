[tool:pytest]
minversion = 6.0
addopts = -ra -q --strict-markers --strict-config
testpaths = tests
markers =
    integration: marks tests as integration tests (interacting with external services)
    performance: marks tests as performance tests (measuring timing and throughput)
    regression: marks tests as regression tests (preventing previously fixed issues)
    slow: marks tests as slow running (may take more than 5 seconds)
    unit: marks tests as unit tests (testing individual components in isolation)
    smoke: marks tests as smoke tests (basic functionality validation)
    api: marks tests as API endpoint tests
    database: marks tests as database interaction tests
    auth: marks tests as authentication/authorization tests
    worker: marks tests as background worker tests
    cache: marks tests as caching functionality tests

python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Configure logging during tests
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filters for warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:sqlalchemy.*

# Test discovery
norecursedirs = .git .tox node_modules venv .venv migrations scripts docs coverage

# Coverage configuration
[coverage:run]
source = app
omit = 
    app/config/*
    */migrations/*
    */venv/*
    */tests/*
    */node_modules/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod 