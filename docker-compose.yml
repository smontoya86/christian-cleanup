services:
  web:
    build:
      context: .
      network: host
    command: gunicorn --bind 0.0.0.0:5001 --workers 4 --timeout 300 --worker-connections 100 run:app
    ports:
      - "5001:5001"
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
      - DEBUG=false
      - BACKFILL_WORKERS=3
      - BACKFILL_BATCH_SIZE=25
      - LLM_TIMEOUT=120
    depends_on:
      - db
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --save 60 1000
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  worker:
    build:
      context: .
      network: host
    command: rq worker analysis --url redis://redis:6379
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: unless-stopped
    environment:
      - OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
      - DEBUG=false
    healthcheck:
      test: ["CMD-SHELL", "rq info --url redis://redis:6379 | grep -q 'analysis'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  postgres_data:
  redis_data:
