# Docker Environment Configuration Template
# Copy this file to .env and update with your actual values

# Flask Configuration
FLASK_ENV=production
DEBUG=false
SECRET_KEY=docker-development-secret-key-replace-in-production

# Database Configuration (managed by docker-compose)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=spotify_cleanup

# Redis Configuration (managed by docker-compose)
REDIS_URL=redis://redis:6379/0

# External API Configuration (Required - Set these to your actual values)
SPOTIFY_CLIENT_ID=your_spotify_client_id_here
SPOTIFY_CLIENT_SECRET=your_spotify_client_secret_here
SPOTIFY_REDIRECT_URI=http://localhost:5001/auth/callback

# Optional API Keys (recommended for full functionality)
LYRICSGENIUS_API_KEY=your_genius_api_token_here
BIBLE_API_KEY=your_bible_api_key_here

# Logging Configuration
LOG_LEVEL=INFO
LOG_TO_FILE=true
LOG_FILE_PATH=/app/logs/app.log

# Analysis Configuration (Router-only)
ANALYSIS_BATCH_SIZE=50
ANALYSIS_TIMEOUT=300
CACHE_LYRICS_TTL=604800
DISABLE_ANALYZER_PREFLIGHT=0
LLM_API_BASE_URL=http://llm:8000/v1
# Fallbacks auto-detected if unset or unreachable: http://ollama:11434/v1 then http://host.docker.internal:11434/v1
LLM_MODEL=llama3.1:8b
LLM_MAX_TOKENS=512
LLM_TEMPERATURE=0.2
LLM_TOP_P=0.9
LLM_CHUNK_CHAR_LIMIT=3500

# Performance Configuration
DB_POOL_SIZE=20
DB_MAX_OVERFLOW=30
DB_POOL_RECYCLE=3600
DB_POOL_TIMEOUT=30

# Queue system removed for MVP; RQ settings deprecated

# Security Configuration
WTF_CSRF_ENABLED=true

# Port Configuration (for health checks)
PORT=5000

# Instructions:
# 1. Copy this file to .env.docker: cp env.docker.example .env.docker
# 2. Replace all placeholder values with your actual API keys and credentials
# 3. Update SECRET_KEY with a strong, random secret for production
# 4. Keep .env.docker out of version control (it's in .gitignore)
