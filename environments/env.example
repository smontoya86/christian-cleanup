# Flask Configuration
FLASK_ENV=development
SECRET_KEY=your-secret-key-here

# Spotify API Configuration
# Get these from https://developer.spotify.com/dashboard
# 1. Create a new app or use an existing one
# 2. Add http://127.0.0.1:5001/auth/callback to "Redirect URIs" in app settings
# 3. Copy Client ID and Client Secret from the app dashboard
SPOTIPY_CLIENT_ID=your-spotify-client-id-here
SPOTIPY_CLIENT_SECRET=your-spotify-client-secret-here-32-characters-long
SPOTIPY_REDIRECT_URI=http://127.0.0.1:5001/auth/callback

# Required Spotify scopes (do not change unless you know what you're doing)
SPOTIFY_SCOPES=user-read-email playlist-read-private user-library-read user-top-read

# Genius API Configuration (optional - for lyrics fetching)
# Free API key from https://genius.com/api-clients
LYRICSGENIUS_API_KEY=your-genius-api-key-here

# Bible API Configuration (optional - for biblical references)
# Free API key for biblical verse lookups
BIBLE_API_KEY=your-bible-api-key-here

# Database Configuration
DATABASE_URL=postgresql://user:password@localhost/dbname

# Redis Configuration (for background tasks)
REDIS_URL=redis://localhost:6379/0

# Analysis Configuration
# Uses FREE local pattern matching - no AI service costs
USE_LIGHTWEIGHT_ANALYZER=true

# Redis Configuration - Using service name in Docker
RQ_REDIS_URL=redis://redis:6379/0

# For Docker Compose environment
DATABASE_URL="postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"

# For local development (uncomment if needed)
# DATABASE_URL="postgresql://postgres:postgres@localhost:5432/spotify_cleanup"
NEXTAUTH_URL="http://localhost:5001"
NEXTAUTH_SECRET="JDPv25PMlvLl360g0zBtgJyVlhO/wtwUfTE5JV61zq4="

# Genius API credentials (optional - for enhanced lyrics fetching)
# Free API from https://genius.com/api-clients
GENIUS_CLIENT_ID=your-genius-client-id-here
GENIUS_CLIENT_SECRET=your-genius-client-secret-here

# NOTE: This application uses 100% FREE local analysis
# No paid AI services (OpenAI, Claude, etc.) are required or used
# The system uses local HuggingFace models for analysis - completely free!

# Note: The following commented entries are kept for reference only
# They are not used by the current analysis system
# ANTHROPIC_API_KEY=your_anthropic_key_here  # NOT USED - System uses local models
# OPENAI_API_KEY=your_openai_key_here        # NOT USED - System uses local models
# All song analysis is done using local pattern matching algorithms 