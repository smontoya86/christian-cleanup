'''
Automated evaluation script for the Christian music analysis application.

This script compares the analysis generated by the application with a gold standard dataset.
'''

import os
import json
import re
import logging
from app.services.analyzers.router_analyzer import RouterAnalyzer

logging.basicConfig(level=logging.INFO)

def get_gold_standard_files():
    """Get a list of all gold standard files."""
    gold_standard_dir = "gold_standard"
    return [os.path.join(gold_standard_dir, f) for f in os.listdir(gold_standard_dir) if f.endswith(".md")]

def parse_gold_standard(file_path):
    """Parse a gold standard file to extract the song information, lyrics, and analysis."""
    logging.info(f"Parsing file: {file_path}")
    with open(file_path, "r") as f:
        content = f.read()

    try:
        title_match = re.search(r"\*\s*\*\*Title:\*\* (.*)", content)
        artist_match = re.search(r"\*\s*\*\*Artist:\*\* (.*)", content)
        lyrics_match = re.search(r"## Lyrics\n\n(.*?)\n\n## Analysis", content, re.DOTALL)
        score_match = re.search(r"Final Score: (\d+\.?\d*)", content)
        verdict_match = re.search(r"\((Green|Purple|Red)\)", content)

        if not all([title_match, artist_match, lyrics_match, score_match, verdict_match]):
            logging.warning(f"Skipping file (missing data): {file_path}")
            return None

        return {
            "title": title_match.group(1).strip(),
            "artist": artist_match.group(1).strip(),
            "lyrics": lyrics_match.group(1).strip(),
            "gold_standard_analysis": {
                "score": float(score_match.group(1)),
                "verdict": verdict_match.group(1)
            }
        }
    except (IndexError, ValueError) as e:
        logging.error(f"Error parsing file {file_path}: {e}")
        return None

def main():
    """Main function to run the evaluation."""
    analyzer = RouterAnalyzer()
    gold_standard_files = get_gold_standard_files()

    for file_path in gold_standard_files:
        song_data = parse_gold_standard(file_path)
        if song_data:
            print(f"Evaluating: {song_data['title']} by {song_data['artist']}")

            generated_analysis = analyzer.analyze_song(song_data['title'], song_data['artist'], song_data['lyrics'])

            print("Gold Standard:", song_data['gold_standard_analysis'])
            print("Generated:", generated_analysis)
            print("-" * 20)

if __name__ == "__main__":
    main()

